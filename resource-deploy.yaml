apiVersion: apps/v1
kind: Deployment
metadata:
  name: resourcesmanagement-deployment
  namespace: test-ahyeha
spec:
  selector:
    matchLabels:
      app: resourcesmanagement
  replicas: 1
  template:
    metadata:
      namespace: test-ahyeha
      labels:
        app: resourcesmanagement
    spec:
      containers:   
      - env:
        - name: JAVA_OPTS
          value: -Dspring.profiles.active=prod,api-docs,no-liquibase
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mysql-trs-pass
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://trs:$(MYSQL_PASSWORD)@mysql-read/resourcesmanagement_db?useUnicode=true&characterEncoding=utf8&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false      
        image: jed.ocir.io/axulzqeiw39c/resourcesmanagement:test
        name: resourcesmanagement
        ports:
        - containerPort: 5057 
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst  
      imagePullSecrets:
      - name: ocirsecrettest
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: resourcesmanagements-service
  namespace: test-ahyeha
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5057
  selector:
    app: resourcesmanagement

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: resourcesmanagements-ingress-path
  namespace: test-ahyeha
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  tls:
    - hosts:
        - "test.ahyeha.com"
      secretName: apps-tls
  rules:
    - host: "test.ahyeha.com"
      http:
        paths:
          - path: /resourcesmanagements(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: resourcesmanagements-service
                port:
                  number: 80
